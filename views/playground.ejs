<!DOCTYPE html>
<html>
<head>
    <title>Developer Quiz</title>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/react/15.4.2/react.js" charset="utf-8"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react/15.4.2/react-dom.js" charset="utf-8"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/6.21.1/babel.min.js" charset="utf-8"></script>

    <style>
        .quiz {
            display: block;
            background: linear-gradient(to bottom, #2a86d6 0%,#7db9e8 100%);
            padding: 40px;
            color: #ffffff;
        }

        .quiz button {
            display: block;
            margin-bottom: 10px;
            color: #000000;
        }

        .quiz .correct {
            background-color: #ffffff;
            padding: 5px;
            color: #11AF08;
            font-weight: bold;
        }

        .quiz .incorrect {
            background-color: #ffffff;
            padding: 5px;
            color: #FF0C0C;
            font-weight: bold;
        }
    </style>

    <script type="text/babel">
        class Quiz extends React.Component {
            constructor(props) {
                super(props);
                this.state = {
                    correct: null
                };
            }

            answer(correct) {
                this.setState({
                    correct
                });
            }

            render() {
                let question = null;
                if (this.state.correct === null) {
                    question = <div>
                        <button onClick={() => this.answer(false)}>a) A graph database query language</button>
                        <button onClick={() => this.answer(true)}>b) An API query language</button>
                        <button onClick={() => this.answer(false)}>c) A graph drawing API</button>
                    </div>;
                }
                let answer = null;
                if (this.state.correct === true) {
                    answer = <div className="correct">Correct! It is an API query language</div>;
                } else if (this.state.correct === false) {
                    answer = <div className="incorrect">Nope! It's actually an API query language</div>;
                }

                return <div className="quiz">
                    <p>What is GraphQL?</p>
                    {question}
                    {answer}
                </div>;
            }
        }
        ReactDOM.render(
            <Quiz />,
            document.getElementById('quiz')
        );
    </script>
</head>
<body>
<h1>from https://meda.io/embed-react-into-an-html-web-page/</h1>
<div id="quiz"></div>
</body>
</html>

<!--
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8" />
    <title>React Testground</title>
    <script crossorigin src="https://unpkg.com/react@16/umd/react.production.min.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@16/umd/react-dom.production.min.js"></script>
    <script type="text/babel">
        function Square(props) {
            return (
                <button className="square" onClick={props.onClick}>
                    {props.value}
                </button>
            );
        }

        class Board extends React.Component {
            renderSquare(i) {
                return (
                    <Square
                        value={this.props.squares[i]}
                        onClick={() => this.props.onClick(i)}
                    />
                );
            }

            render() {
                return (
                    <div>
                        <div className="board-row">
                            {this.renderSquare(0)}
                            {this.renderSquare(1)}
                            {this.renderSquare(2)}
                        </div>
                        <div className="board-row">
                            {this.renderSquare(3)}
                            {this.renderSquare(4)}
                            {this.renderSquare(5)}
                        </div>
                        <div className="board-row">
                            {this.renderSquare(6)}
                            {this.renderSquare(7)}
                            {this.renderSquare(8)}
                        </div>
                    </div>
                );
            }
        }

        class Game extends React.Component {
            constructor(props) {
                super(props);
                this.state = {
                    history: [
                        {
                            squares: Array(9).fill(null)
                        }
                    ],
                    stepNumber: 0,
                    xIsNext: true
                };
            }

            handleClick(i) {
                const history = this.state.history.slice(0, this.state.stepNumber + 1);
                const current = history[history.length - 1];
                const squares = current.squares.slice();
                if (calculateWinner(squares) || squares[i]) {
                    return;
                }
                squares[i] = this.state.xIsNext ? "X" : "O";
                this.setState({
                    history: history.concat([
                        {
                            squares: squares
                        }
                    ]),
                    stepNumber: history.length,
                    xIsNext: !this.state.xIsNext
                });
            }

            jumpTo(step) {
                this.setState({
                    stepNumber: step,
                    xIsNext: (step % 2) === 0
                });
            }

            render() {
                const history = this.state.history;
                const current = history[this.state.stepNumber];
                const winner = calculateWinner(current.squares);

                const moves = history.map((step, move) => {
                    const desc = move ?
                        'Go to move #' + move :
                        'Go to game start';
                    return (
                        <li key={move}>
                            <button onClick={() => this.jumpTo(move)}>{desc}</button>
                        </li>
                    );
                });

                let status;
                if (winner) {
                    status = "Winner: " + winner;
                } else {
                    status = "Next player: " + (this.state.xIsNext ? "X" : "O");
                }

                return (
                    <div className="game">
                        <div className="game-board">
                            <Board
                                squares={current.squares}
                                onClick={i => this.handleClick(i)}
                            />
                        </div>
                        <div className="game-info">
                            <div>{status}</div>
                            <ol>{moves}</ol>
                        </div>
                    </div>
                );
            }
        }

        // ========================================

        ReactDOM.render(<Game />, document.getElementById("timer"));

        function calculateWinner(squares) {
            const lines = [
                [0, 1, 2],
                [3, 4, 5],
                [6, 7, 8],
                [0, 3, 6],
                [1, 4, 7],
                [2, 5, 8],
                [0, 4, 8],
                [2, 4, 6]
            ];
            for (let i = 0; i < lines.length; i++) {
                const [a, b, c] = lines[i];
                if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {
                    return squares[a];
                }
            }
            return null;
        }


    </script>
</head>
<body>
<div id="timer"></div>





</body>
</html>-->
